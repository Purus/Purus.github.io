<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mainframe on Purusothaman Ramanujam</title>
    <link>http://purusothaman.me/categories/mainframe/</link>
    <description>Recent content in Mainframe on Purusothaman Ramanujam</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Aug 2013 09:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://purusothaman.me/categories/mainframe/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overriding Concatenated Datasets in JCL</title>
      <link>http://purusothaman.me/overriding-concatenated-datasets-in-jcl/</link>
      <pubDate>Fri, 02 Aug 2013 09:00:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/overriding-concatenated-datasets-in-jcl/</guid>
      <description>Lets assume that you have a PROC with the following step which has 5 concatenated steps.
//STEP010 EXEC PGM=PROGRAM1 //INPUTF DD DSN=INPUT.FILE1,DISP=SHR // DD DSN=INPUT.FILE2,DISP=SHR // DD DSN=INPUT.FILE3,DISP=SHR // DD DSN=INPUT.FILE4,DISP=SHR // DD DSN=INPUT.FILE5,DISP=SHR  In the JCL which calls the above mentioned PROC, you want to override only one of the 5 concatenated files from PROC. For example, you want to override the 3rd concatenated file with another file called INPUT.</description>
    </item>
    
    <item>
      <title>DB2 9 Family Fundamentals(000-730) - Q &amp; A</title>
      <link>http://purusothaman.me/db2-9-family-fundamentals000-730---q--a/</link>
      <pubDate>Mon, 08 Jul 2013 08:09:57 +0000</pubDate>
      
      <guid>http://purusothaman.me/db2-9-family-fundamentals000-730---q--a/</guid>
      <description>Read and Download several question and answers for the IBM DB2 9 certification exam.
Section 1 - Planning (14%)
 Knowledge of restricting data access Knowledge of the features or functions available in DB2 tools (just tools that come with product - distributed +space - i.e., control center, configuration advisor, configuration assistant, command line processor) Knowledge database workloads (OLTP vs warehousing) Knowledge of non-relational data concepts (extenders) Knowledge of XML data implications (non-shreading)  Section 2 - Security (11%)</description>
    </item>
    
    <item>
      <title>Replacing low values to spaces in Mainframe Sort</title>
      <link>http://purusothaman.me/replacing-low-values-to-spaces-in-mainframe-sort/</link>
      <pubDate>Wed, 26 Jun 2013 15:30:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/replacing-low-values-to-spaces-in-mainframe-sort/</guid>
      <description>In Mainframe, using Sort, how can I replace all the low-values in a file to spaces?
We can use ALTSEQ CODE to change the low-values or high-values to spaces in a file using Sort. Here&amp;rsquo;s an example of how you could change all low values (X&amp;rsquo;00&amp;rsquo;) to spaces (X&amp;rsquo;40&amp;rsquo;), in an FB data set with an LRECL of 80:
ALTSEQ CODE=(0040) OUTREC FIELDS=(1,80,TRAN=ALTSEQ)  </description>
    </item>
    
    <item>
      <title>COBOL Code Optimization</title>
      <link>http://purusothaman.me/cobol-code-optimization/</link>
      <pubDate>Fri, 27 Apr 2012 10:08:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/cobol-code-optimization/</guid>
      <description>To assist in the optimization of the code, you should use the OPTIMIZE compiler option. With the OPTIMIZE(STD) or OPTIMIZE(FULL) options in effect, you may receive optimizations that include:
 eliminating unnecessary branches simplifying inefficient branches simplifying the code for the out-of-line PERFORM statement, moving the performed paragraphs in-line,where possible simplifying the code for a CALL to a contained (nested) program, moving the called statements in-line,where possible eliminating duplicate computations eliminating constant computations aggregating moves of contiguous, equal-sized items into a single move deleting unreachable code  Additionally, with the OPTIMIZE(FULL) option in effect, you may also receive these optimizations:</description>
    </item>
    
    <item>
      <title>ARITH Compiler Option in COBOL</title>
      <link>http://purusothaman.me/arith-compiler-option-in-cobol/</link>
      <pubDate>Thu, 26 Apr 2012 09:08:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/arith-compiler-option-in-cobol/</guid>
      <description>ARITH affects the maximum number of digits that you can code for integers, and the number of digits used in fixed-point intermediate results. By specifying ARITH complier option we can control the maximum number of digits allowed for decimal numbers (packed decimal, zoned decimal and numeric-edited data items and numeric literals).
 ARITH(EXTEND) : Max. Number of digits 31.
 ARITH(COMPAT) : Max. Number of digits 18.
  Default is: ARITH(COMPAT)</description>
    </item>
    
    <item>
      <title>Converting a file from VB to FB.</title>
      <link>http://purusothaman.me/converting-a-file-from-vb-to-fb./</link>
      <pubDate>Wed, 21 Mar 2012 09:02:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/converting-a-file-from-vb-to-fb./</guid>
      <description>DFSORT can be used to do VB to FB conversion, when sorting, copying or merging. The VTOF or CONVERT and OUTREC operands of OUTFIL can be used to change variable-length (e.g. VB) input records to fixed-length (e.g. FB) output records. VTOF or CONVERT indicates that conversion is to be performed and OUTREC defines the reformatted records. All output data sets for which VTOF or CONVERT is used must have or will be given fixed-length record formats.</description>
    </item>
    
    <item>
      <title>Recovering Deleted Flat Files in Mainframe</title>
      <link>http://purusothaman.me/recovering-deleted-flat-files-in-mainframe/</link>
      <pubDate>Wed, 21 Mar 2012 08:59:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/recovering-deleted-flat-files-in-mainframe/</guid>
      <description>Flat files can be recovered by following the below mentioned steps.
 Start 6 HLIST BCDS DSN(&amp;lsquo;filename&amp;rsquo;) Wait for the system notification Type the command HRECOVER &amp;lsquo;filename&amp;rsquo; and wait for system notification  Different variations of HRECOVER are given below.
 HRECOVER &amp;lsquo;filename&amp;rsquo; : recovers with same name. HRECOVER &amp;lsquo;old filename&amp;rsquo; NEW (&amp;lsquo;new filename&amp;rsquo;) : recovers and assigns new name. HRECOVER &amp;lsquo;file name&amp;rsquo; REPLACE : recovers replacing a file with same name.</description>
    </item>
    
    <item>
      <title>AUTOTYPE Suggestion</title>
      <link>http://purusothaman.me/autotype-suggestion/</link>
      <pubDate>Wed, 21 Mar 2012 08:49:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/autotype-suggestion/</guid>
      <description>How wonderful it feels when Internet explorer suggests names for URLs when we start typing the first few letters!
Our mainframe also has the ability to do pretty much the same. Using KEYS command on the command line, assign a free PF key with the value AUTOTYPE. We are all set.

Now use 3.4 to go to the Data Set list utility and then type the first few qualifier of the required data set.</description>
    </item>
    
    <item>
      <title>Options on DECLARE CURSOR</title>
      <link>http://purusothaman.me/options-on-declare-cursor/</link>
      <pubDate>Wed, 21 Mar 2012 06:58:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/options-on-declare-cursor/</guid>
      <description>Use FOR READ/FETCH ONLY or WITH UR for retrieval only cursors. Use OPTIMIZE when you know the accurate number of rows that will be fetched Use ORDER BY only when sequence is important Use WITH HOLD statement to prevent COMMIT from destroying the cursor position in batch Programs. Select only those fields that you truly need Use only DCLGEN variables as predicates  While declaring CURSOR in handler we should use OPTIMIZE FOR n ROWS, if we want pass only n rows from DB2 handler back to calling program.</description>
    </item>
    
    <item>
      <title>Useful List of SYSIBM tables</title>
      <link>http://purusothaman.me/useful-list-of-sysibm-tables/</link>
      <pubDate>Wed, 21 Mar 2012 06:35:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/useful-list-of-sysibm-tables/</guid>
      <description>SYSCHECKDEP Column references for CHECK constraints
SYSCHECKS CHECK constraint specifications
SYSCHECKS2 (V7) Information about CHECK constraints on DB2 Catalog tables created for V7 or later
SYSCOLAUTH The UPDATE privileges held by DB2 users on table or view columns
SYSCOLDIST Cardinality, frequent value, and non-padded frequent value distribution statistics for the first key column of an index key
SYSCOLDIST_HIST (V7) Column distribution statistics history
SYSCOLSTATS The partition statistics for selected columns</description>
    </item>
    
    <item>
      <title>GDG - A Basic Introduction</title>
      <link>http://purusothaman.me/gdg---a-basic-introduction/</link>
      <pubDate>Thu, 09 Feb 2012 07:32:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/gdg---a-basic-introduction/</guid>
      <description>Introduction
GDG stands for Generation Data Group. Here a group of files are related functionally or chronologically and can be accessed individually or as a group. These files share a unique name.
 Every dataset in a GDG has a Generation number and version number. Eg.TESTGDG.DATA.G0001.V00 Subsequent files are named by incrementing the Generation number(G0001-G9999). The current generation is referred a 0. The next generation as +1 an previous generation as -1 Every time a new gen is created, it becomes the current gen and the current gen becomes the previous generation.</description>
    </item>
    
    <item>
      <title>Ranking and Numbering for Records in DB2</title>
      <link>http://purusothaman.me/ranking-and-numbering-for-records-in-db2/</link>
      <pubDate>Mon, 23 Jan 2012 12:01:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/ranking-and-numbering-for-records-in-db2/</guid>
      <description>DB2 supports ranking and numbering in much the same way that Oracle does.
The available functions are:
 ROW_NUMBER(), which simply numbers the returned rows sequentially &amp;lt;&amp;#47;li&amp;gt; RANK(), which ranks the results, but, in the case of a tie, gives the same number to each and leaves a gap to compensate &amp;lt;&amp;#47;li&amp;gt; DENSE_RANK() operates the same as RANK() but doesn&amp;rsquo;t leave any gaps.  Listing 1 - Ranking and Numbering Results</description>
    </item>
    
    <item>
      <title>Selecting first few rows in DB2</title>
      <link>http://purusothaman.me/selecting-first-few-rows-in-db2/</link>
      <pubDate>Mon, 23 Jan 2012 11:58:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/selecting-first-few-rows-in-db2/</guid>
      <description>DB2&amp;rsquo;s method of performing a Top-N query is the FETCH FIRST clause. You can append these variations to a regular SELECT query:
 FETCH FIRST ROW ONLY
 FETCH FIRST 1 ROW ONLY FETCH FIRST integer ROWS ONLY  Interestingly, you can also use:
 FETCH FIRST 1 ROWS ONLY FETCH FIRST 5 ROW ONLY  They aren&amp;rsquo;t as nice grammatically, but they make it easier to generate queries automatically - you don&amp;rsquo;t have to worry about whether to say ROW or ROWS.</description>
    </item>
    
    <item>
      <title>INSPECT in COBOL</title>
      <link>http://purusothaman.me/inspect-in-cobol/</link>
      <pubDate>Mon, 23 Jan 2012 10:40:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/inspect-in-cobol/</guid>
      <description>The INSPECT verb has two options, TALLYING and REPLACING. You can do one or the other or both. If both are done, the TALLYING IS DONE BEFORE THE replacing. Some versions of the INSPECT require that all the literals be in quotes. This may call for a redefination if the field is numeric.
In using the TALLYING format of the INSPECT, you are tallying into a field that is a counter.</description>
    </item>
    
    <item>
      <title>ISPF Special Searching</title>
      <link>http://purusothaman.me/ispf-special-searching/</link>
      <pubDate>Mon, 23 Jan 2012 06:30:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/ispf-special-searching/</guid>
      <description>A picture string in a FIND, CHANGE, or EXCLUDE command allows you to search for a particular kind of character without regard for the specific character involved.
You can use special characters within the picture string to represent the kind of character to be found, as follows:
They can be used in REXX ISREDIT macros too.
   String Meaning     P&amp;rsquo;=&amp;rsquo; Any character   P&amp;rsquo;&amp;not;&amp;lsquo; Any character that is not a blank   P&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>TIME=NOLIMIT and TIME=MAXIMUM</title>
      <link>http://purusothaman.me/timenolimit-and-timemaximum/</link>
      <pubDate>Mon, 23 Jan 2012 06:16:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/timenolimit-and-timemaximum/</guid>
      <description>We can specify the max limit of TIME parameter as
TIME=NOLIMIT
TIME=MAXIMUM
Now which specification gives maximum time for a JOB?
TIME=MAXIMUM will allow the job to run for 357912 minutes (248.55 days)
TIME=NOLIMIT will allow the job for unlimited amount of time
Another advantage of NOLIMIT option is that it can remain in wait status for more than the installation time limit.</description>
    </item>
    
    <item>
      <title>Run a step only from a set of steps in a job</title>
      <link>http://purusothaman.me/run-a-step-only-from-a-set-of-steps-in-a-job/</link>
      <pubDate>Mon, 23 Jan 2012 06:12:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/run-a-step-only-from-a-set-of-steps-in-a-job/</guid>
      <description>I have a JCL with 20 steps. Due to some reasons I want to execute the step 15 only.
One way to do it is to use RESTART from STEP15, but it will try to execute the subsequent steps too. We have to insert null statement after step15 to prevent the execution of subsequent steps.
But one decent way is there in which we don&amp;rsquo;t need to touch the job steps code, but alter only the Jobcard.</description>
    </item>
    
    <item>
      <title>DB2 Index with Expressions</title>
      <link>http://purusothaman.me/db2-index-with-expressions/</link>
      <pubDate>Mon, 23 Jan 2012 06:09:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/db2-index-with-expressions/</guid>
      <description>Prior to DB2 9, the create index statement only allowed you to use the column name from the table the index is being built on. The same value for each column stored on the table was copied into the index and used to quickly identify the row when searching by that column name. Now with DB2 9, the create index statement supports a feature known as key expressions. Here’s why key expressions should interest you.</description>
    </item>
    
    <item>
      <title>Run a Program using Referback</title>
      <link>http://purusothaman.me/run-a-program-using-referback/</link>
      <pubDate>Mon, 23 Jan 2012 06:02:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/run-a-program-using-referback/</guid>
      <description>It is possible to execute a program from any library using the referback feature.
STEP1 EXEC PGM=IEFBR14 //PROGRAM DD DSN=SYSTEM.PGM.LOADLIB(COBOLPGM),DISP=SHR . . . . . //STEP2 EXEC PGM=*.STEP1.PROGRAM  </description>
    </item>
    
    <item>
      <title>Like the DB2 LIKE</title>
      <link>http://purusothaman.me/like-the-db2-like/</link>
      <pubDate>Fri, 20 Jan 2012 10:46:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/like-the-db2-like/</guid>
      <description>The LIKE phrase defines a mask for comparing characters:
WHERE COL_VAL [NOT] LIKE mask  A mask may be a host variable or a literal enclosed in quotes and may contain any number of:
   Mask What to Find?     character literal for an exact match   underscore character for any single character   percent sign character for any sequence of characters of length 0 or more    For example:</description>
    </item>
    
    <item>
      <title>Handling NULL in DB2</title>
      <link>http://purusothaman.me/handling-null-in-db2/</link>
      <pubDate>Fri, 20 Jan 2012 10:43:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/handling-null-in-db2/</guid>
      <description>The value of an indicator variable tells the status of a row after a query.
Host Variable:
01 FILLER. 05 WS-AMOUNT PIC S9(5)V9(2) COMP-3. 05 WS-CUSTNUM PIC X(5).  Indicator variable:
01 FILLER. 05 AMT-IND PIC S9(4) COMP.  Consider the below SQL.
EXEC SQL SELECT CUST_AMOUNT INTO :WS-AMOUNT:AMT-IND FROM T100.CUST WHERE CUST_ID = :WS-CUSTNUM END-EXEC.  After a query, the indicator variable contains the following:
 0 - Column is not null -1 - Column is null -2 - Column is null as result of conversion error +length - Full length of column that was truncated to fit a short host variable  Some points to ponder:</description>
    </item>
    
    <item>
      <title>Isolation level in DB2</title>
      <link>http://purusothaman.me/isolation-level-in-db2/</link>
      <pubDate>Fri, 20 Jan 2012 10:40:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/isolation-level-in-db2/</guid>
      <description>The list of isoloation leves are listed below.
 SERIALIZABLE(Repeatable read (RR)) REPEATABLE READ(Read stability (RS)) READ COMMITTED(Cursor stability (CS)) (default) READ UNCOMMITTED(Uncommitted read (UR))  SERIALIZABLE (DB2 UDB: Repeatable Read)
Locks the table within a unit of work. An application can retrieve and operate on rows in the table as many times as needed. However, the entire table is locked, not just the rows that are retrieved. Until the unit of work completes, no other application can update, delete, or insert a row that would affect the table.</description>
    </item>
    
    <item>
      <title>Freezing columns in File-Aid</title>
      <link>http://purusothaman.me/freezing-columns-in-file-aid/</link>
      <pubDate>Fri, 20 Jan 2012 10:38:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/freezing-columns-in-file-aid/</guid>
      <description>While working in MS Excel we have the option of &amp;ldquo;Freeze Panes&amp;rdquo;. By this options we can freeze some columns and have other columns scrolling. This feature is helpful in analysis when there are lots of columns(fields) in a file.
In mainframe too, we have similar such facility thru File-Aid.
 Open the file in File-Aid Use VFMT format If you want to freeze columns(fields) 1,2,3, and 6 and have the rest as scrollable issue the below command.</description>
    </item>
    
    <item>
      <title>Read Only VSM Files</title>
      <link>http://purusothaman.me/read-only-vsm-files/</link>
      <pubDate>Fri, 20 Jan 2012 10:32:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/read-only-vsm-files/</guid>
      <description>By using INHIBIT along with ALTER command, we can have a read-only VSAM dataset.
Example:
//STEP1 EXEC PGM=IDCAMS //SYSPRINT DD SYSOUT=* //SYSIN DD * ALTER – SECRET.KSDS.DATA – INHIBIT ALTER – SECRET.KSDS.INDEX – INHIBIT /*  Notice that the ALTER command is used with DATA and INDEX and not with the cluster.</description>
    </item>
    
    <item>
      <title>TSQ Vs. TDQ</title>
      <link>http://purusothaman.me/tsq-vs.-tdq/</link>
      <pubDate>Fri, 20 Jan 2012 10:19:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/tsq-vs.-tdq/</guid>
      <description>In Temporary Storage Queues Data is read randomly, while in Transient Data Queues data must be read sequentially. In a TSQ data can be read any number of times as it remains in the queue until the entire Queue is deleted. In TDQ data item can be read once only. To reuse the TDQ it must be closed and reopened. Data can be changed in TSQ, but not in TDQ.</description>
    </item>
    
    <item>
      <title>Find bad data using File-Aid</title>
      <link>http://purusothaman.me/find-bad-data-using-file-aid/</link>
      <pubDate>Fri, 20 Jan 2012 10:14:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/find-bad-data-using-file-aid/</guid>
      <description>The Easiest and Coolest way to locate bad data is thru File-Aid&amp;rsquo;s FIND command.
 OPEN the file in FILE-AID (in either browse or edit mode). XREF with COPYBOOK. Use FMT mode. Then issue the below command.   F /field-name INVALID
 or
 F /field-number INVALID
 The control will take you to the first invalid data record for the given field.
Example: The FILE has 3 fields namely NAME,AGE,COUNTRY.</description>
    </item>
    
    <item>
      <title>Points to Ponder on DB2 NULL</title>
      <link>http://purusothaman.me/points-to-ponder-on-db2-null/</link>
      <pubDate>Thu, 19 Jan 2012 21:40:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/points-to-ponder-on-db2-null/</guid>
      <description>NULLs can present problems because they are handled differently by different computers and the collating sequence is inconsistent with regard to NULLs. Unless you specify NOT NULL, the default is to allow for NULLs. It&amp;rsquo;s easy for us to get lazy and allow columns to contain NULLs when it would be better to specify NOT NULL. Allowing for NULLs will create UNKNOWN logical values. Always test your code with NULLs in all possible places.</description>
    </item>
    
    <item>
      <title>Explanation on DB2 Explain</title>
      <link>http://purusothaman.me/explanation-on-db2-explain/</link>
      <pubDate>Thu, 19 Jan 2012 21:29:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/explanation-on-db2-explain/</guid>
      <description>When an SQL is executed against or bound to a DB2 database, DB2 Optimizer tool defines the access path used to access the data. This access path is defined according to tables’ statistics generated by DB2 Runstats tool.
The Explain command details the access path defined by DB2 and allows you to analyze how the data will be accessed and how you can improve the command’s performance.
A table called PLAN_TABLE which has your user id as its owner is required for working on DB2 Explain.</description>
    </item>
    
    <item>
      <title>Appending to ISPF Clipboard</title>
      <link>http://purusothaman.me/appending-to-ispf-clipboard/</link>
      <pubDate>Thu, 19 Jan 2012 21:02:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/appending-to-ispf-clipboard/</guid>
      <description>Scenario: I have a dataset with 10,000 lines. I want to cut the first 10 lines and last 10 lines and paste into another dataset. When I cut the first 10 lines and then again the last 10 lines, only the last 10 lines are pasted into the new dataset.

Is there anyway out (other than doing a 2 cut &amp;amp; paste)?

Yes, here it is.
 First cut 10 lines, then issue CUT APPEND.</description>
    </item>
    
    <item>
      <title>Viewing Mainframe ISPF Clipboard</title>
      <link>http://purusothaman.me/viewing-mainframe-ispf-clipboard/</link>
      <pubDate>Thu, 19 Jan 2012 20:57:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/viewing-mainframe-ispf-clipboard/</guid>
      <description>When I issue CUT , I know that the CUT content are placed in a clipboard. And when I issue PASTE, the clipboard content are pasted.
But is it possible for me to view and edit the clipboard?
One can view the clipboard after any valid CUT command was issued.
To view the clipboard, issue :
CUT DISPLAY  
Clipboard manager will pop up and gives us options to edit or browse the content.</description>
    </item>
    
    <item>
      <title>Changing the Create or Update User ID in Mainframe</title>
      <link>http://purusothaman.me/changing-the-create-or-update-user-id-in-mainframe/</link>
      <pubDate>Thu, 19 Jan 2012 20:49:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/changing-the-create-or-update-user-id-in-mainframe/</guid>
      <description>Usually the PDS or PS bears the ID of the creator or the ID of the person who modified it recently. It&amp;rsquo;s possible to change these ID values without leaving trace of one&amp;rsquo;s own ID.

In the command area against the member name or PS name, by giving &amp;lsquo;G&amp;rsquo;.
Dialog box will pop up allowing you to change the ID values.</description>
    </item>
    
    <item>
      <title>Repeating the ISPF command without typing again</title>
      <link>http://purusothaman.me/repeating-the-ispf-command-without-typing-again/</link>
      <pubDate>Thu, 19 Jan 2012 20:07:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/repeating-the-ispf-command-without-typing-again/</guid>
      <description>Any command entered in the ISPF COMMAND LINE disappears after the successful execution of its intended function. If you want to repeat the same command , you got to re-type it or use some PF key to retrieve the last command entered.
But here is a cool method the make the command entered not to disappear and stay on the screen.
Precede commands with &amp;ldquo;&amp;amp;&amp;ldquo;.
For Example:
 &amp;amp;C &amp;lsquo;110-PARA&amp;rsquo; &amp;lsquo;220-PARA&amp;rsquo;</description>
    </item>
    
    <item>
      <title>Recently accessed Datasets in Mainframe</title>
      <link>http://purusothaman.me/recently-accessed-datasets-in-mainframe/</link>
      <pubDate>Wed, 18 Jan 2012 18:28:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/recently-accessed-datasets-in-mainframe/</guid>
      <description>Here is the way to find the last 10 datasets that you have accessed.
 GO TO ISPF 3.4 option. On the top, there is a MENUBAR. Select REFLIST Select Option 1 in it.  Using this option you can find out the last 30 datasets that you have accessed.</description>
    </item>
    
    <item>
      <title>Verification of DB2 Consistency token</title>
      <link>http://purusothaman.me/verification-of-db2-consistency-token/</link>
      <pubDate>Wed, 18 Jan 2012 18:10:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/verification-of-db2-consistency-token/</guid>
      <description>When a Job abends at a program due to bind error with SQL code of -805 or -818 then generally there is issue with consistency token (often referred as CONTOKEN). These kind of abends can be easily fixed if we can find where the CONTOKEN mismatch occurs.
STEP1:- CONTOKEN in Package
RUN the following query:
 SELECT NAME, CONTOKEN, COLLID, PDSNAME FROM SYSIBM.SYSPACKAGE WHERE NAME=&amp;lsquo;MODULE&amp;rsquo; AND COLLID=&amp;lsquo;COLLID&amp;rsquo;
 Provide the name of the module in &amp;ldquo;NAME&amp;rdquo; and Collection name in &amp;ldquo;COLLID&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Filtering Jobs in Spool</title>
      <link>http://purusothaman.me/filtering-jobs-in-spool/</link>
      <pubDate>Wed, 18 Jan 2012 15:25:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/filtering-jobs-in-spool/</guid>
      <description>There is a possibility to list only the jobs which has ABENDED, leaving out all other jobs in the spool.
For such a kind of listing, use the primary command FILTER on the command line as given in the examples below.
FIL MAX AB* - shows jobs that has ABENDS  Other Examples are:
Shows jobs that has JCL errors:
FIL MAX ‘JCL ERROR’  Shows jobs with “exceptional conditions”:</description>
    </item>
    
    <item>
      <title>Rearrage SDSF Columns</title>
      <link>http://purusothaman.me/rearrage-sdsf-columns/</link>
      <pubDate>Wed, 18 Jan 2012 15:22:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/rearrage-sdsf-columns/</guid>
      <description>If you want to rearrange the columns in SDSF.
 Go to SDSF;ST.
 In command line type &amp;ldquo;arr ?&amp;rdquo;.
 This will bring the complete list of SDSF column names.
 You can move the columns using &amp;ldquo;/&amp;rdquo; and &amp;ldquo;//&amp;rdquo;.
  One Column in the SDSF that we can bring to the front position is the MAX-RC (which usually is the last column in SDSF) which shows the completion code or the abend code of the job.</description>
    </item>
    
    <item>
      <title>Change uppercase to lowercase or lowercase to uppercase in Sort</title>
      <link>http://purusothaman.me/change-uppercase-to-lowercase-or-lowercase-to-uppercase-in-sort/</link>
      <pubDate>Wed, 18 Jan 2012 14:52:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/change-uppercase-to-lowercase-or-lowercase-to-uppercase-in-sort/</guid>
      <description>Translation features of INREC, OUTREC and OUTFIL make it easy to change the case of characters in your fields.
The TRAN=LTOU operand can be used to change lowercase EBCDIC letters (a-z) to uppercase EBCDIC letters (A-Z) anywhere in a field.
The TRAN=UTOL operand can be used to change uppercase EBCDIC letters to lowercase EBCDIC letters anywhere in a field.
You could change the case in the entire record as well or part of the record.</description>
    </item>
    
    <item>
      <title>Easy &amp; Fast Editing of PDS using File-Aid</title>
      <link>http://purusothaman.me/easy--fast-editing-of-pds-using-file-aid/</link>
      <pubDate>Wed, 18 Jan 2012 14:37:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/easy--fast-editing-of-pds-using-file-aid/</guid>
      <description>Projects do testing of their code multiple times before they move their code to production. Once the test JCLs are created. From the second run, we need to just change few qualifiers of the DSN and dates in all the JCLs.
The conventional method is enter each member of the JCL PDS and make the changes. If you are sure that you are gonna make common changes in all the members then go ahead and use the below technique.</description>
    </item>
    
    <item>
      <title>Add leading and trailing Characters in Sort</title>
      <link>http://purusothaman.me/add-leading-and-trailing-characters-in-sort/</link>
      <pubDate>Wed, 18 Jan 2012 12:50:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/add-leading-and-trailing-characters-in-sort/</guid>
      <description>Lets assume that we have a sequential dataset with records as below:
ONE TWO THREE FOUR FIVE  I want to reformat the records for output as follows:
NUMBER &#39;ONE&#39; NUMBER &#39;TWO&#39; NUMBER &#39;THREE&#39; NUMBER &#39;FOUR&#39; NUMBER &#39;FIVE&#39;  You can do this quite easily with DFSORT&amp;rsquo;s JFY function as follows:
 OPTION COPY
INREC BUILD=(1,13,JFY=(SHIFT=LEFT,LEAD=C&amp;rsquo;NUMBER &amp;ldquo;&amp;lsquo;, TRAIL=C&amp;rdquo;&amp;ldquo;)
 SHIFT=LEFT left-justifies the data. LEAD inserts the hard coded text NUMBER &amp;lsquo; before the value with no intervening blanks.</description>
    </item>
    
  </channel>
</rss>