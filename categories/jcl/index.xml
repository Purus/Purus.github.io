<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jcl on Purusothaman Ramanujam</title>
    <link>http://purusothaman.me/categories/jcl/</link>
    <description>Recent content in Jcl on Purusothaman Ramanujam</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Aug 2013 09:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://purusothaman.me/categories/jcl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overriding Concatenated Datasets in JCL</title>
      <link>http://purusothaman.me/overriding-concatenated-datasets-in-jcl/</link>
      <pubDate>Fri, 02 Aug 2013 09:00:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/overriding-concatenated-datasets-in-jcl/</guid>
      <description>Lets assume that you have a PROC with the following step which has 5 concatenated steps.
//STEP010 EXEC PGM=PROGRAM1 //INPUTF DD DSN=INPUT.FILE1,DISP=SHR // DD DSN=INPUT.FILE2,DISP=SHR // DD DSN=INPUT.FILE3,DISP=SHR // DD DSN=INPUT.FILE4,DISP=SHR // DD DSN=INPUT.FILE5,DISP=SHR  In the JCL which calls the above mentioned PROC, you want to override only one of the 5 concatenated files from PROC. For example, you want to override the 3rd concatenated file with another file called INPUT.</description>
    </item>
    
    <item>
      <title>GDG - A Basic Introduction</title>
      <link>http://purusothaman.me/gdg---a-basic-introduction/</link>
      <pubDate>Thu, 09 Feb 2012 07:32:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/gdg---a-basic-introduction/</guid>
      <description>Introduction
GDG stands for Generation Data Group. Here a group of files are related functionally or chronologically and can be accessed individually or as a group. These files share a unique name.
 Every dataset in a GDG has a Generation number and version number. Eg.TESTGDG.DATA.G0001.V00 Subsequent files are named by incrementing the Generation number(G0001-G9999). The current generation is referred a 0. The next generation as +1 an previous generation as -1 Every time a new gen is created, it becomes the current gen and the current gen becomes the previous generation.</description>
    </item>
    
    <item>
      <title>TIME=NOLIMIT and TIME=MAXIMUM</title>
      <link>http://purusothaman.me/timenolimit-and-timemaximum/</link>
      <pubDate>Mon, 23 Jan 2012 06:16:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/timenolimit-and-timemaximum/</guid>
      <description>We can specify the max limit of TIME parameter as
TIME=NOLIMIT
TIME=MAXIMUM
Now which specification gives maximum time for a JOB?
TIME=MAXIMUM will allow the job to run for 357912 minutes (248.55 days)
TIME=NOLIMIT will allow the job for unlimited amount of time
Another advantage of NOLIMIT option is that it can remain in wait status for more than the installation time limit.</description>
    </item>
    
    <item>
      <title>Run a step only from a set of steps in a job</title>
      <link>http://purusothaman.me/run-a-step-only-from-a-set-of-steps-in-a-job/</link>
      <pubDate>Mon, 23 Jan 2012 06:12:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/run-a-step-only-from-a-set-of-steps-in-a-job/</guid>
      <description>I have a JCL with 20 steps. Due to some reasons I want to execute the step 15 only.
One way to do it is to use RESTART from STEP15, but it will try to execute the subsequent steps too. We have to insert null statement after step15 to prevent the execution of subsequent steps.
But one decent way is there in which we don&amp;rsquo;t need to touch the job steps code, but alter only the Jobcard.</description>
    </item>
    
    <item>
      <title>Run a Program using Referback</title>
      <link>http://purusothaman.me/run-a-program-using-referback/</link>
      <pubDate>Mon, 23 Jan 2012 06:02:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/run-a-program-using-referback/</guid>
      <description>It is possible to execute a program from any library using the referback feature.
STEP1 EXEC PGM=IEFBR14 //PROGRAM DD DSN=SYSTEM.PGM.LOADLIB(COBOLPGM),DISP=SHR . . . . . //STEP2 EXEC PGM=*.STEP1.PROGRAM  </description>
    </item>
    
    <item>
      <title>Dummy VSM Dataset in JCL</title>
      <link>http://purusothaman.me/dummy-vsm-dataset-in-jcl/</link>
      <pubDate>Fri, 20 Jan 2012 10:28:00 +0000</pubDate>
      
      <guid>http://purusothaman.me/dummy-vsm-dataset-in-jcl/</guid>
      <description>In general we use DUMMY datasets in JCL instead of a actual file for some requirements.
But how can we specify dummy VSAM dataset in a JCL?
The parameter AMP=&amp;lsquo;AMORG&amp;rsquo; tells the OS to treat the file as VSAM file.
 //NOVSAMIO DD DUMMY,AMP=&amp;lsquo;AMORG&amp;rsquo;
 </description>
    </item>
    
  </channel>
</rss>